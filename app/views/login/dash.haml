- require 'json'

- return_val = Login.labelled(session[:token])
- @project_xmls = return_val[0]
- @labels = return_val[1]
- @project_stories = return_val[2]
- @positions = return_val[3]
- @x_arr = []
- @l_arr = []
- @label_count = 0

%div.code#tab-container
  - tab_count = 0
  - @labels.each do |label|
    - tab_count += 1
    %div{:id => "tab_#{tab_count}", :class => "label_tab hover pointer"}= label.titleize

%div.clearBoth
%table.collapse
  %tbody.ui-widget-ui-widget-content
    %tr
      = render :partial => ('login/dash_items')
  
:javascript
  var connectSort = new Array(#{@x_arr.size});
  connectSort = #{@x_arr.to_json};
  var labelHide = new Array(#{@l_arr.size});
  labelHide = #{@l_arr.to_json};
  
  var time;
  $(document).ready(function(){
    $(connectSort).each(function(index, obj){
      $("." + this).sortable({
        connectWith: ".connectedSortable_" + this,
        cancel: '.state-disabled',
        revert: true,
        stop: function(event, ui){
          time = settime();
          $.ajax({
            type: "GET",
           url: "#{@root_url}/tweet?message="+ " Updated this " +ui.item.attr("type").toString()+ ": " +ui.item.attr("title").toString()+ " (#{time} " +time+ ")"
          });
        }
      }).disableSelection();
    });
    
    $('.ui-icon-circle-close').click(function() {
      var $this = $(this);
      $(labelHide).each(function(index, obj){
        var $hey = this;
        $($this).parents("#label_" + this).addClass("hidden").hide('slow');
        if (($("#label_" + this).hasClass("hidden")) == true) {
          $("#tab_" + $hey).show();
        }
        $("#tab_" + $hey).click(function() {
          $($this).parents("#label_" + $hey).removeClass("hidden").show('slow');
          $("#tab_" + $hey).hide();
        });
      });
    });
  });
