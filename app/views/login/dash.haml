- require 'json'
//*****tables for each user
//**************************
-time = Time.new
-time = time.strftime("%b %d, %Y")

%table.collapse
  %tbody.ui-widget-ui-widget-content
    %tr
      = render :partial => ('login/dash_items')
      
- tab_count = 0
- @labels.each do |label|
  - tab_count += 1
  %div{:id => "tab_#{tab_count}", :class => "label_tab", :style => "display:none"}= label.titleize
  
      
:javascript
  var connectSort = new Array(#{@x_arr.size});
  connectSort = #{@x_arr.to_json};
  
  var labelHide = new Array(#{@l_arr.size});
  labelHide = #{@l_arr.to_json};
  
  var time = settime();
  $(document).ready(function(){
    $(connectSort).each(function(index, obj){
      $("." + this).sortable({
        connectWith: ".connectedSortable_" + this,
        cancel: '.state-disabled',
        revert: true,
        start: function(event, ui) {alert(ui.item.attr("title")) },
        stop: function(event, ui){
          time = settime();
          $.ajax({
            type: "GET",
            url: "#{@root_url}/tweet?message=" + " Updated this "+ ui.item.attr("type").toString()+": "+ui.item.attr("title").toString() 
                 + " (#{time} " + time + ")"
            //url: alert(ui.item.attr("label"))
          });
        }
      }).disableSelection();
    });
    
    $('.ui-icon-circle-close').click(function() {
      var $this = $(this);
      $(labelHide).each(function(index, obj){
        var $hey = this;
        $($this).parents("#label_" + this).addClass("hidden").hide();
        if (($("#label_" + this).hasClass("hidden")) == true) {
          $("#tab_" + $hey).show('fast');
        }
        
        $("#tab_" + $hey).click(function() {
          $($this).parents("#label_" + $hey).removeClass("hidden").show();
          $("#tab_" + $hey).hide();
          });
        });
      return false;
    });
  });
