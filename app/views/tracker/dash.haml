- require 'json'

- @x_arr = []
- @l_arr = []
- @label_count = 0

#overlay
#loading
  %img{:src => "/images/ajax-loader.gif"}
  %h5 Updating...

#tab-container
  Show/Hide Labels
  - tab_count = 0
  - @labels = @labels.sort
  - @labels.each do |label|
    - tab_count += 1
    %div{:id => "tab_#{tab_count}", :class => "label-tab hiliter pointer"}= label.titleize

#tab-content
  %table.collapse
    %tbody.ui-widget
      %tr
        = render :partial => ('tracker/dash_items')

:javascript
  var connectSort = new Array(#{@x_arr.size});
  connectSort = #{@x_arr.to_json};
  var labelHide = new Array(#{@l_arr.size});
  labelHide = #{@l_arr.to_json};
  
  var token = #{session[:token].to_json}
  var time;
  function tweeter(item,time){
    $.ajax({
      type: "GET",
      url: "#{@root_url}/tweet?message="+ " Updated this " +item.attr("type").toString()+ ": " +item.attr("title").toString()+ " (#{time} " +time+ ")"
    });
  }
  
  $(document).ready(function(){
    $(connectSort).each(function(index, obj){
      $("." + this).sortable({
        connectWith: ".connectedSortable_" + this,
        cancel: '.state-disabled',
        revert: true,
        stop: function(event, ui){
        
          var prevPos = parseInt (ui.item.prevAll().attr("pos"));
          var nextPos = parseInt (ui.item.nextAll().attr("pos"));
          
          var move, target;
          var project = ui.item.attr('project_id');
          var story = ui.item.attr('story_id');
          
          if (isNaN(prevPos)){
            move = 'before';
            target = ui.item.nextAll()
          } else {
            move = 'after';
            target = ui.item.prevAll()
          }
          
          $.ajax({
            type: 'POST',
            url: "#{prioritize_url}?project=" + project + "&story=" + story + "&move=" + move  + "&target=" + target.attr('story_id') + "&label=" + target.attr('label'),
          });
          
          time = settime();
          //tweeter(ui.item, time);     
        }
      }).disableSelection();
      
      $("." + this + "_unstarted").sortable({
        connectWith: ".unstartedConnectedSortable_" + this,
        cancel: '.state-disabled',
        revert: true,
        stop: function(event, ui){
        
          var prevPos = parseInt (ui.item.prevAll().attr("pos"));
          var nextPos = parseInt (ui.item.nextAll().attr("pos"));
          
          var move, target;
          var project = ui.item.attr('project_id');
          var story = ui.item.attr('story_id');
          
          if (isNaN(prevPos)){
            move = 'before';
            target = ui.item.nextAll()
          } else {
            move = 'after';
            target = ui.item.prevAll()
          }
          
          $.ajax({
            type: 'POST',
            url: "#{prioritize_url}?project=" + project + "&story=" + story + "&move=" + move  + "&target=" + target.attr('story_id') + "&label=" + target.attr('label'),
          });
          
          time = settime();
          //tweeter(ui.item, time);     
        }
      }).disableSelection();
    
    $("." + this + "_accepted").sortable({
        connectWith: ".acceptedConnectedSortable_" + this,
        items: 'li:not(.ui-state-disabled)',
        revert: true,
        stop: function(event, ui){
        
          var prevPos = parseInt (ui.item.prevAll().attr("pos"));
          var nextPos = parseInt (ui.item.nextAll().attr("pos"));
          
          var move, target;
          var project = ui.item.attr('project_id');
          var story = ui.item.attr('story_id');
          
          if (isNaN(prevPos)){
            move = 'before';
            target = ui.item.nextAll()
          } else {
            move = 'after';
            target = ui.item.prevAll()
          }
          
          $.ajax({
            type: 'POST',
            url: "#{prioritize_url}?project=" + project + "&story=" + story + "&move=" + move  + "&target=" + target.attr('story_id') + "&label=" + target.attr('label'),
          });
          
          time = settime();
          //tweeter(ui.item, time);     
        }
      }).disableSelection();
    });
    
    //show/hide labels
    $('.ui-icon-circle-close').showHideFunc();
    //show/hide labels cookies
    $(labelHide).showHideCookies();
  });

